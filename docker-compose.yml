services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"  # Expose PLAINTEXT port
      - "9093:9093"  # Expose CONTROLLER port
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    restart: unless-stopped
    networks:
    - monitoring

  kafka-exporter:
    image: bitnami/jmx-exporter:latest
    container_name: kafka-exporter
    environment:
      - SERVICE_PORT=5556
      - SERVICE_NAME=kafka
      - SERVICE_JMX_URL=service:jmx:rmi:///jndi/rmi://broker:9999/jmxrmi
    ports:
      - "5556:5556"
    depends_on:
      - broker
    networks:
      - monitoring

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: reddit_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: reddit_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monitoring

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://reddit_user:password@postgres:5432/reddit_db?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres    
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      # Auto-configure Prometheus as a data source
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    restart: unless-stopped
    depends_on:
      - postgres
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring

volumes:
  postgres_data:
  grafana_data:
  prometheus_data:

networks:
  monitoring:
    driver: bridge